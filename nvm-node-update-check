#!/usr/bin/env bash

# Bash strict mode.
set -eEo pipefail


# Returns 0 if you have the latest version of node, 1 if you don't,
# and 2 if you somehow have a later version of node than the latest.
nvmNodeUpdateCheck() {
    # One liner for getting the location of where this script is.
    workingDir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

    # Import stuffs.
    # shellcheck disable=SC1090
    source "$workingDir/version-compare"

    # If NVM exists, source it.
    # Else exit.
    # True if the file exists and has a size greater than zero.
    if [[ -s "$HOME/.nvm/nvm.sh" ]]; then
        # shellcheck disable=SC1090
        . "$HOME/.nvm/nvm.sh"
    else
        echo "NVM doesn't exist on your system."
        exit 1
    fi

    latestVersionRemote=$(nvm_ls_remote | tail -1 | cut -c2-)
    echo "The latest remote Node version is: '$latestVersionRemote'"
    latestVersionLocal=$(nvm_ls | tail -2 | head -1 | cut -c2-)
    echo "The latest local Node version is: '$latestVersionLocal'"

    versionCompare "$latestVersionRemote" "$latestVersionLocal"
    comparison=$?

    if [[ "$comparison" == 0 ]]; then
        echo "You have the latest version of Node! :D"

        return "$comparison"
    elif [[ "$comparison" == 1 ]]; then
        echo "You don't have the lastest version of Node! :("

        return "$comparison"
    else
        echo "You somehow have a later version of Node than the latest release..."

        return "$comparison"
    fi
}

